First, it checks your code to make sure it follows the rules of the C++ language.
If it does not, the compiler will give you an error (and the corresponding line number) to help pinpoint what needs fixing.
The compilation process will also be aborted until the error is fixed.

Second, it translates your C++ source code into a machine language file called an object file.
Object files are typically named name.o or name.obj, where name is the same name as the .cpp file it was produced from.

After the compiler creates one or more object files, then another program called the linker kicks in.
The job of the linker is three fold:
    First, to take all the object files generated by the compiler and combine them into a single executable program.
    Second, in addition to being able to link object files, the linker also is capable of linking library files.
    A library file is a collection of precompiled code that has been “packaged up” for reuse in other programs.
